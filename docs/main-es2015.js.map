{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'wakeupinator';\n  formControl: FormControl = new FormControl('');\n  wakeUpTime: any;\n\n  coefficients = {\n    INTERCEPT: 749.1144, // no value\n    MONTH: 15.6278, // values are 1 - 12\n    DAY_NUMBER: -0.5863, // values are 1 - 365\n    DAY: 11.8238, // Value will be 1 for saturday, or 2 for sunday\n  };\n\n  isNightModeEnabled = false;\n\n  ngOnInit() {\n    // Get user's current time - if it's past 6 pm but before 6 am, enable night mode\n    const userCurrentTime = new Date().getHours();\n    if (userCurrentTime > 18 || userCurrentTime < 6) {\n      this.isNightModeEnabled = true;\n    }\n  }\n\n  weekendsOnlyFilter = (d: Date): boolean => {\n    const day = d.getDay();\n    // Only allow Saturday and Sunday to be selected.\n    return day === 0 || day === 6;\n  }\n\n  onDateChange() {\n    const date: Date = this.formControl.value;\n    const monthValue = date.getMonth() + 1;\n    const dayNumberValue = this.getDayNumber(date);\n    const dayValue = this.getDayValue(date);\n\n    const timeInMinutes = this.coefficients.INTERCEPT + \n      (this.coefficients.MONTH * monthValue) + \n      (this.coefficients.DAY_NUMBER * dayNumberValue) + \n      (this.coefficients.DAY * dayValue);\n\n    const timeInHours = timeInMinutes / 60;\n    const minutes = Math.round((timeInHours % 1) * 60);\n    const hours = Math.floor(timeInHours);\n\n    this.wakeUpTime = `${hours}:${minutes < 10 ? `0` + minutes : minutes} ${hours >= 12 ? 'PM' : 'AM'} on ${date.toDateString()}`;\n\n  }\n\n  getDayNumber(enteredDate: Date): number {\n    const enteredYear = enteredDate.getFullYear();\n    const startOfYear = new Date('01/01/' + enteredYear);\n    const dayDif = ((enteredDate.getTime() - startOfYear.getTime())  / 1000 / 60 / 60 / 24) + 1;\n    return dayDif;\n  }\n\n  getDayValue(enteredDate: Date): number {\n    // Sunday\n    if (enteredDate.getDay() === 0) {\n      return 2\n    } else if (enteredDate.getDay() === 6) {\n      //Saturday\n      return 1;\n    } else {\n      return -1;\n    }\n\n  }\n}\n","<nav>\n  <span class=\"header\"> The Wake-up-inator</span>\n</nav>\n\n<div class=\"main-body\">\n  <div>\n    <img src=\"assets/ahmed.png\">\n  </div>\n    <mat-form-field appearance=\"fill\" class=\"margin-10\">\n      <mat-label>Choose a date</mat-label>\n      <input matInput [formControl]=\"formControl\" [matDatepickerFilter]=\"weekendsOnlyFilter\" [matDatepicker]=\"picker\" (ngModelChange)=\"onDateChange()\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n    <div class=\"margin-10\">\n      <div class=\"header\">Ahmed shall wake up at</div>\n      <div class=\"header\">{{wakeUpTime}}</div>\n    </div>\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatInputModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}